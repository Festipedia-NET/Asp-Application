

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class Festival : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Festival entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Festival()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Festival(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Festival> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Festival.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Festival_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Festival_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int fest_id
        {
            get
            {
                return global::LightSwitchApplication.Festival.DetailsClass.GetValue(this, global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.fest_id);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void fest_id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void fest_id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void fest_id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string fest_naam
        {
            get
            {
                return global::LightSwitchApplication.Festival.DetailsClass.GetValue(this, global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.fest_naam);
            }
            set
            {
                global::LightSwitchApplication.Festival.DetailsClass.SetValue(this, global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.fest_naam, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void fest_naam_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void fest_naam_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void fest_naam_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string fest_locatie
        {
            get
            {
                return global::LightSwitchApplication.Festival.DetailsClass.GetValue(this, global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.fest_locatie);
            }
            set
            {
                global::LightSwitchApplication.Festival.DetailsClass.SetValue(this, global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.fest_locatie, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void fest_locatie_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void fest_locatie_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void fest_locatie_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime fest_datum
        {
            get
            {
                return global::LightSwitchApplication.Festival.DetailsClass.GetValue(this, global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.fest_datum);
            }
            set
            {
                global::LightSwitchApplication.Festival.DetailsClass.SetValue(this, global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.fest_datum, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void fest_datum_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void fest_datum_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void fest_datum_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int fest_duur
        {
            get
            {
                return global::LightSwitchApplication.Festival.DetailsClass.GetValue(this, global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.fest_duur);
            }
            set
            {
                global::LightSwitchApplication.Festival.DetailsClass.SetValue(this, global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.fest_duur, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void fest_duur_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void fest_duur_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void fest_duur_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.BandsPerFestival> BandsPerFestivals
        {
            get
            {
                return global::LightSwitchApplication.Festival.DetailsClass.GetValue(this, global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.BandsPerFestivals);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.BandsPerFestival> BandsPerFestivalsQuery
        {
            get
            {
                return global::LightSwitchApplication.Festival.DetailsClass.GetQuery(this, global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.BandsPerFestivals);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.CampingsPerFestival> CampingsPerFestivals
        {
            get
            {
                return global::LightSwitchApplication.Festival.DetailsClass.GetValue(this, global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.CampingsPerFestivals);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.CampingsPerFestival> CampingsPerFestivalsQuery
        {
            get
            {
                return global::LightSwitchApplication.Festival.DetailsClass.GetQuery(this, global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.CampingsPerFestivals);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Ticket> Tickets
        {
            get
            {
                return global::LightSwitchApplication.Festival.DetailsClass.GetValue(this, global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.Tickets);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Ticket> TicketsQuery
        {
            get
            {
                return global::LightSwitchApplication.Festival.DetailsClass.GetQuery(this, global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.Tickets);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.TickettypesPerFestival> TickettypesPerFestivals
        {
            get
            {
                return global::LightSwitchApplication.Festival.DetailsClass.GetValue(this, global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.TickettypesPerFestivals);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TickettypesPerFestival> TickettypesPerFestivalsQuery
        {
            get
            {
                return global::LightSwitchApplication.Festival.DetailsClass.GetQuery(this, global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.TickettypesPerFestivals);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Festival,
                global::LightSwitchApplication.Festival.DetailsClass,
                global::LightSwitchApplication.Festival.DetailsClass.IImplementation,
                global::LightSwitchApplication.Festival.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.fest_id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass>.Entry
                __FestivalEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass>.Entry(
                    global::LightSwitchApplication.Festival.DetailsClass.__Festival_CreateNew,
                    global::LightSwitchApplication.Festival.DetailsClass.__Festival_Created,
                    global::LightSwitchApplication.Festival.DetailsClass.__Festival_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Festival __Festival_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Festival> es)
            {
                return new global::LightSwitchApplication.Festival(es);
            }
            private static void __Festival_Created(global::LightSwitchApplication.Festival e)
            {
                e.Festival_Created();
            }
            private static bool __Festival_AllowSaveWithErrors(global::LightSwitchApplication.Festival e)
            {
                bool result = false;
                e.Festival_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Festival.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, int> fest_id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.fest_id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, string> fest_naam
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.fest_naam) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, string> fest_locatie
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.fest_locatie) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::System.DateTime> fest_datum
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.fest_datum) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, int> fest_duur
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.fest_duur) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::LightSwitchApplication.BandsPerFestival> BandsPerFestivals
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.BandsPerFestivals) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::LightSwitchApplication.BandsPerFestival>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::LightSwitchApplication.CampingsPerFestival> CampingsPerFestivals
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.CampingsPerFestivals) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::LightSwitchApplication.Ticket> Tickets
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.Tickets) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::LightSwitchApplication.Ticket>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::LightSwitchApplication.TickettypesPerFestival> TickettypesPerFestivals
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.TickettypesPerFestivals) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::LightSwitchApplication.TickettypesPerFestival>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int fest_id { get; }
                new string fest_naam { get; set; }
                new string fest_locatie { get; set; }
                new global::System.DateTime fest_datum { get; set; }
                new int fest_duur { get; set; }
                new global::System.Collections.IEnumerable BandsPerFestivals { get; }
                new global::System.Collections.IEnumerable CampingsPerFestivals { get; }
                new global::System.Collections.IEnumerable Tickets { get; }
                new global::System.Collections.IEnumerable TickettypesPerFestivals { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, int>.Entry
                    fest_id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, int>.Entry(
                        "fest_id",
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_id_Stub,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_id_Validate,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_id_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_id_OnValueChanged);
                private static void _fest_id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Festival.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, int>.Data> c, global::LightSwitchApplication.Festival.DetailsClass d, object sf)
                {
                    c(d, ref d._fest_id, sf);
                }
                private static bool _fest_id_ComputeIsReadOnly(global::LightSwitchApplication.Festival e)
                {
                    bool result = false;
                    e.fest_id_IsReadOnly(ref result);
                    return result;
                }
                private static void _fest_id_Validate(global::LightSwitchApplication.Festival e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.fest_id_Validate(r);
                }
                private static int _fest_id_GetImplementationValue(global::LightSwitchApplication.Festival.DetailsClass d)
                {
                    return d.ImplementationEntity.fest_id;
                }
                private static void _fest_id_OnValueChanged(global::LightSwitchApplication.Festival e)
                {
                    e.fest_id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, string>.Entry
                    fest_naam = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, string>.Entry(
                        "fest_naam",
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_naam_Stub,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_naam_ComputeIsReadOnly,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_naam_Validate,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_naam_GetImplementationValue,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_naam_SetImplementationValue,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_naam_OnValueChanged);
                private static void _fest_naam_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Festival.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, string>.Data> c, global::LightSwitchApplication.Festival.DetailsClass d, object sf)
                {
                    c(d, ref d._fest_naam, sf);
                }
                private static bool _fest_naam_ComputeIsReadOnly(global::LightSwitchApplication.Festival e)
                {
                    bool result = false;
                    e.fest_naam_IsReadOnly(ref result);
                    return result;
                }
                private static void _fest_naam_Validate(global::LightSwitchApplication.Festival e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.fest_naam_Validate(r);
                }
                private static string _fest_naam_GetImplementationValue(global::LightSwitchApplication.Festival.DetailsClass d)
                {
                    return d.ImplementationEntity.fest_naam;
                }
                private static void _fest_naam_SetImplementationValue(global::LightSwitchApplication.Festival.DetailsClass d, string v)
                {
                    d.ImplementationEntity.fest_naam = v;
                }
                private static void _fest_naam_OnValueChanged(global::LightSwitchApplication.Festival e)
                {
                    e.fest_naam_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, string>.Entry
                    fest_locatie = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, string>.Entry(
                        "fest_locatie",
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_locatie_Stub,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_locatie_ComputeIsReadOnly,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_locatie_Validate,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_locatie_GetImplementationValue,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_locatie_SetImplementationValue,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_locatie_OnValueChanged);
                private static void _fest_locatie_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Festival.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, string>.Data> c, global::LightSwitchApplication.Festival.DetailsClass d, object sf)
                {
                    c(d, ref d._fest_locatie, sf);
                }
                private static bool _fest_locatie_ComputeIsReadOnly(global::LightSwitchApplication.Festival e)
                {
                    bool result = false;
                    e.fest_locatie_IsReadOnly(ref result);
                    return result;
                }
                private static void _fest_locatie_Validate(global::LightSwitchApplication.Festival e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.fest_locatie_Validate(r);
                }
                private static string _fest_locatie_GetImplementationValue(global::LightSwitchApplication.Festival.DetailsClass d)
                {
                    return d.ImplementationEntity.fest_locatie;
                }
                private static void _fest_locatie_SetImplementationValue(global::LightSwitchApplication.Festival.DetailsClass d, string v)
                {
                    d.ImplementationEntity.fest_locatie = v;
                }
                private static void _fest_locatie_OnValueChanged(global::LightSwitchApplication.Festival e)
                {
                    e.fest_locatie_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::System.DateTime>.Entry
                    fest_datum = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::System.DateTime>.Entry(
                        "fest_datum",
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_datum_Stub,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_datum_ComputeIsReadOnly,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_datum_Validate,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_datum_GetImplementationValue,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_datum_SetImplementationValue,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_datum_OnValueChanged);
                private static void _fest_datum_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Festival.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Festival.DetailsClass d, object sf)
                {
                    c(d, ref d._fest_datum, sf);
                }
                private static bool _fest_datum_ComputeIsReadOnly(global::LightSwitchApplication.Festival e)
                {
                    bool result = false;
                    e.fest_datum_IsReadOnly(ref result);
                    return result;
                }
                private static void _fest_datum_Validate(global::LightSwitchApplication.Festival e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.fest_datum_Validate(r);
                }
                private static global::System.DateTime _fest_datum_GetImplementationValue(global::LightSwitchApplication.Festival.DetailsClass d)
                {
                    return d.ImplementationEntity.fest_datum;
                }
                private static void _fest_datum_SetImplementationValue(global::LightSwitchApplication.Festival.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.fest_datum = global::LightSwitchApplication.Festival.DetailsClass.TruncateDate(v);
                }
                private static void _fest_datum_OnValueChanged(global::LightSwitchApplication.Festival e)
                {
                    e.fest_datum_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, int>.Entry
                    fest_duur = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, int>.Entry(
                        "fest_duur",
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_duur_Stub,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_duur_ComputeIsReadOnly,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_duur_Validate,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_duur_GetImplementationValue,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_duur_SetImplementationValue,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._fest_duur_OnValueChanged);
                private static void _fest_duur_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Festival.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, int>.Data> c, global::LightSwitchApplication.Festival.DetailsClass d, object sf)
                {
                    c(d, ref d._fest_duur, sf);
                }
                private static bool _fest_duur_ComputeIsReadOnly(global::LightSwitchApplication.Festival e)
                {
                    bool result = false;
                    e.fest_duur_IsReadOnly(ref result);
                    return result;
                }
                private static void _fest_duur_Validate(global::LightSwitchApplication.Festival e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.fest_duur_Validate(r);
                }
                private static int _fest_duur_GetImplementationValue(global::LightSwitchApplication.Festival.DetailsClass d)
                {
                    return d.ImplementationEntity.fest_duur;
                }
                private static void _fest_duur_SetImplementationValue(global::LightSwitchApplication.Festival.DetailsClass d, int v)
                {
                    d.ImplementationEntity.fest_duur = v;
                }
                private static void _fest_duur_OnValueChanged(global::LightSwitchApplication.Festival e)
                {
                    e.fest_duur_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::LightSwitchApplication.BandsPerFestival>.Entry
                    BandsPerFestivals = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::LightSwitchApplication.BandsPerFestival>.Entry(
                        "BandsPerFestivals",
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._BandsPerFestivals_Stub,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._BandsPerFestivals_GetReferencedEntities,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._BandsPerFestivals_GetEntityCollection);
                private static void _BandsPerFestivals_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Festival.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::LightSwitchApplication.BandsPerFestival>.Data> c, global::LightSwitchApplication.Festival.DetailsClass d, object sf)
                {
                    c(d, ref d._BandsPerFestivals, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.BandsPerFestival> _BandsPerFestivals_GetReferencedEntities(global::LightSwitchApplication.Festival.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass>(global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.BandsPerFestivals, ref d._BandsPerFestivals);
                }
                private static global::System.Collections.IEnumerable _BandsPerFestivals_GetEntityCollection(global::LightSwitchApplication.Festival.DetailsClass d)
                {
                    return d.ImplementationEntity.BandsPerFestivals;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>.Entry
                    CampingsPerFestivals = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>.Entry(
                        "CampingsPerFestivals",
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._CampingsPerFestivals_Stub,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._CampingsPerFestivals_GetReferencedEntities,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._CampingsPerFestivals_GetEntityCollection);
                private static void _CampingsPerFestivals_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Festival.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>.Data> c, global::LightSwitchApplication.Festival.DetailsClass d, object sf)
                {
                    c(d, ref d._CampingsPerFestivals, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.CampingsPerFestival> _CampingsPerFestivals_GetReferencedEntities(global::LightSwitchApplication.Festival.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.CampingsPerFestival, global::LightSwitchApplication.CampingsPerFestival.DetailsClass>(global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.CampingsPerFestivals, ref d._CampingsPerFestivals);
                }
                private static global::System.Collections.IEnumerable _CampingsPerFestivals_GetEntityCollection(global::LightSwitchApplication.Festival.DetailsClass d)
                {
                    return d.ImplementationEntity.CampingsPerFestivals;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::LightSwitchApplication.Ticket>.Entry
                    Tickets = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::LightSwitchApplication.Ticket>.Entry(
                        "Tickets",
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._Tickets_Stub,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._Tickets_GetReferencedEntities,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._Tickets_GetEntityCollection);
                private static void _Tickets_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Festival.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::LightSwitchApplication.Ticket>.Data> c, global::LightSwitchApplication.Festival.DetailsClass d, object sf)
                {
                    c(d, ref d._Tickets, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Ticket> _Tickets_GetReferencedEntities(global::LightSwitchApplication.Festival.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass>(global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.Tickets, ref d._Tickets);
                }
                private static global::System.Collections.IEnumerable _Tickets_GetEntityCollection(global::LightSwitchApplication.Festival.DetailsClass d)
                {
                    return d.ImplementationEntity.Tickets;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::LightSwitchApplication.TickettypesPerFestival>.Entry
                    TickettypesPerFestivals = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::LightSwitchApplication.TickettypesPerFestival>.Entry(
                        "TickettypesPerFestivals",
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._TickettypesPerFestivals_Stub,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._TickettypesPerFestivals_GetReferencedEntities,
                        global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties._TickettypesPerFestivals_GetEntityCollection);
                private static void _TickettypesPerFestivals_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Festival.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::LightSwitchApplication.TickettypesPerFestival>.Data> c, global::LightSwitchApplication.Festival.DetailsClass d, object sf)
                {
                    c(d, ref d._TickettypesPerFestivals, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TickettypesPerFestival> _TickettypesPerFestivals_GetReferencedEntities(global::LightSwitchApplication.Festival.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.TickettypesPerFestival, global::LightSwitchApplication.TickettypesPerFestival.DetailsClass>(global::LightSwitchApplication.Festival.DetailsClass.PropertySetProperties.TickettypesPerFestivals, ref d._TickettypesPerFestivals);
                }
                private static global::System.Collections.IEnumerable _TickettypesPerFestivals_GetEntityCollection(global::LightSwitchApplication.Festival.DetailsClass d)
                {
                    return d.ImplementationEntity.TickettypesPerFestivals;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, int>.Data _fest_id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, string>.Data _fest_naam;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, string>.Data _fest_locatie;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::System.DateTime>.Data _fest_datum;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, int>.Data _fest_duur;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::LightSwitchApplication.BandsPerFestival>.Data _BandsPerFestivals;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>.Data _CampingsPerFestivals;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::LightSwitchApplication.Ticket>.Data _Tickets;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass, global::LightSwitchApplication.TickettypesPerFestival>.Data _TickettypesPerFestivals;
            
        }
    
        #endregion
    }
    
    #endregion
}
