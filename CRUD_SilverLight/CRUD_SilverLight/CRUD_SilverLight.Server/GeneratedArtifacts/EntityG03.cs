

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class Camping : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Camping entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Camping()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Camping(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Camping> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Camping.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Camping_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Camping_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int camp_id
        {
            get
            {
                return global::LightSwitchApplication.Camping.DetailsClass.GetValue(this, global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties.camp_id);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void camp_id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void camp_id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void camp_id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string camp_adres
        {
            get
            {
                return global::LightSwitchApplication.Camping.DetailsClass.GetValue(this, global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties.camp_adres);
            }
            set
            {
                global::LightSwitchApplication.Camping.DetailsClass.SetValue(this, global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties.camp_adres, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void camp_adres_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void camp_adres_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void camp_adres_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int camp_cap
        {
            get
            {
                return global::LightSwitchApplication.Camping.DetailsClass.GetValue(this, global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties.camp_cap);
            }
            set
            {
                global::LightSwitchApplication.Camping.DetailsClass.SetValue(this, global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties.camp_cap, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void camp_cap_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void camp_cap_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void camp_cap_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.CampingsPerFestival> CampingsPerFestivals
        {
            get
            {
                return global::LightSwitchApplication.Camping.DetailsClass.GetValue(this, global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties.CampingsPerFestivals);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.CampingsPerFestival> CampingsPerFestivalsQuery
        {
            get
            {
                return global::LightSwitchApplication.Camping.DetailsClass.GetQuery(this, global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties.CampingsPerFestivals);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.FacPerCamp> FacPerCamps
        {
            get
            {
                return global::LightSwitchApplication.Camping.DetailsClass.GetValue(this, global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties.FacPerCamps);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.FacPerCamp> FacPerCampsQuery
        {
            get
            {
                return global::LightSwitchApplication.Camping.DetailsClass.GetQuery(this, global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties.FacPerCamps);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Camping,
                global::LightSwitchApplication.Camping.DetailsClass,
                global::LightSwitchApplication.Camping.DetailsClass.IImplementation,
                global::LightSwitchApplication.Camping.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties.camp_id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass>.Entry
                __CampingEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass>.Entry(
                    global::LightSwitchApplication.Camping.DetailsClass.__Camping_CreateNew,
                    global::LightSwitchApplication.Camping.DetailsClass.__Camping_Created,
                    global::LightSwitchApplication.Camping.DetailsClass.__Camping_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Camping __Camping_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Camping> es)
            {
                return new global::LightSwitchApplication.Camping(es);
            }
            private static void __Camping_Created(global::LightSwitchApplication.Camping e)
            {
                e.Camping_Created();
            }
            private static bool __Camping_AllowSaveWithErrors(global::LightSwitchApplication.Camping e)
            {
                bool result = false;
                e.Camping_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Camping.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, int> camp_id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties.camp_id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, string> camp_adres
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties.camp_adres) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, int> camp_cap
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties.camp_cap) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, global::LightSwitchApplication.CampingsPerFestival> CampingsPerFestivals
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties.CampingsPerFestivals) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, global::LightSwitchApplication.FacPerCamp> FacPerCamps
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties.FacPerCamps) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, global::LightSwitchApplication.FacPerCamp>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int camp_id { get; }
                new string camp_adres { get; set; }
                new int camp_cap { get; set; }
                new global::System.Collections.IEnumerable CampingsPerFestivals { get; }
                new global::System.Collections.IEnumerable FacPerCamps { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, int>.Entry
                    camp_id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, int>.Entry(
                        "camp_id",
                        global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties._camp_id_Stub,
                        global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties._camp_id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties._camp_id_Validate,
                        global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties._camp_id_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties._camp_id_OnValueChanged);
                private static void _camp_id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Camping.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, int>.Data> c, global::LightSwitchApplication.Camping.DetailsClass d, object sf)
                {
                    c(d, ref d._camp_id, sf);
                }
                private static bool _camp_id_ComputeIsReadOnly(global::LightSwitchApplication.Camping e)
                {
                    bool result = false;
                    e.camp_id_IsReadOnly(ref result);
                    return result;
                }
                private static void _camp_id_Validate(global::LightSwitchApplication.Camping e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.camp_id_Validate(r);
                }
                private static int _camp_id_GetImplementationValue(global::LightSwitchApplication.Camping.DetailsClass d)
                {
                    return d.ImplementationEntity.camp_id;
                }
                private static void _camp_id_OnValueChanged(global::LightSwitchApplication.Camping e)
                {
                    e.camp_id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, string>.Entry
                    camp_adres = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, string>.Entry(
                        "camp_adres",
                        global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties._camp_adres_Stub,
                        global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties._camp_adres_ComputeIsReadOnly,
                        global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties._camp_adres_Validate,
                        global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties._camp_adres_GetImplementationValue,
                        global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties._camp_adres_SetImplementationValue,
                        global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties._camp_adres_OnValueChanged);
                private static void _camp_adres_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Camping.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, string>.Data> c, global::LightSwitchApplication.Camping.DetailsClass d, object sf)
                {
                    c(d, ref d._camp_adres, sf);
                }
                private static bool _camp_adres_ComputeIsReadOnly(global::LightSwitchApplication.Camping e)
                {
                    bool result = false;
                    e.camp_adres_IsReadOnly(ref result);
                    return result;
                }
                private static void _camp_adres_Validate(global::LightSwitchApplication.Camping e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.camp_adres_Validate(r);
                }
                private static string _camp_adres_GetImplementationValue(global::LightSwitchApplication.Camping.DetailsClass d)
                {
                    return d.ImplementationEntity.camp_adres;
                }
                private static void _camp_adres_SetImplementationValue(global::LightSwitchApplication.Camping.DetailsClass d, string v)
                {
                    d.ImplementationEntity.camp_adres = v;
                }
                private static void _camp_adres_OnValueChanged(global::LightSwitchApplication.Camping e)
                {
                    e.camp_adres_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, int>.Entry
                    camp_cap = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, int>.Entry(
                        "camp_cap",
                        global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties._camp_cap_Stub,
                        global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties._camp_cap_ComputeIsReadOnly,
                        global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties._camp_cap_Validate,
                        global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties._camp_cap_GetImplementationValue,
                        global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties._camp_cap_SetImplementationValue,
                        global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties._camp_cap_OnValueChanged);
                private static void _camp_cap_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Camping.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, int>.Data> c, global::LightSwitchApplication.Camping.DetailsClass d, object sf)
                {
                    c(d, ref d._camp_cap, sf);
                }
                private static bool _camp_cap_ComputeIsReadOnly(global::LightSwitchApplication.Camping e)
                {
                    bool result = false;
                    e.camp_cap_IsReadOnly(ref result);
                    return result;
                }
                private static void _camp_cap_Validate(global::LightSwitchApplication.Camping e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.camp_cap_Validate(r);
                }
                private static int _camp_cap_GetImplementationValue(global::LightSwitchApplication.Camping.DetailsClass d)
                {
                    return d.ImplementationEntity.camp_cap;
                }
                private static void _camp_cap_SetImplementationValue(global::LightSwitchApplication.Camping.DetailsClass d, int v)
                {
                    d.ImplementationEntity.camp_cap = v;
                }
                private static void _camp_cap_OnValueChanged(global::LightSwitchApplication.Camping e)
                {
                    e.camp_cap_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>.Entry
                    CampingsPerFestivals = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>.Entry(
                        "CampingsPerFestivals",
                        global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties._CampingsPerFestivals_Stub,
                        global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties._CampingsPerFestivals_GetReferencedEntities,
                        global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties._CampingsPerFestivals_GetEntityCollection);
                private static void _CampingsPerFestivals_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Camping.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>.Data> c, global::LightSwitchApplication.Camping.DetailsClass d, object sf)
                {
                    c(d, ref d._CampingsPerFestivals, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.CampingsPerFestival> _CampingsPerFestivals_GetReferencedEntities(global::LightSwitchApplication.Camping.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.CampingsPerFestival, global::LightSwitchApplication.CampingsPerFestival.DetailsClass>(global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties.CampingsPerFestivals, ref d._CampingsPerFestivals);
                }
                private static global::System.Collections.IEnumerable _CampingsPerFestivals_GetEntityCollection(global::LightSwitchApplication.Camping.DetailsClass d)
                {
                    return d.ImplementationEntity.CampingsPerFestivals;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, global::LightSwitchApplication.FacPerCamp>.Entry
                    FacPerCamps = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, global::LightSwitchApplication.FacPerCamp>.Entry(
                        "FacPerCamps",
                        global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties._FacPerCamps_Stub,
                        global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties._FacPerCamps_GetReferencedEntities,
                        global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties._FacPerCamps_GetEntityCollection);
                private static void _FacPerCamps_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Camping.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, global::LightSwitchApplication.FacPerCamp>.Data> c, global::LightSwitchApplication.Camping.DetailsClass d, object sf)
                {
                    c(d, ref d._FacPerCamps, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.FacPerCamp> _FacPerCamps_GetReferencedEntities(global::LightSwitchApplication.Camping.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.FacPerCamp, global::LightSwitchApplication.FacPerCamp.DetailsClass>(global::LightSwitchApplication.Camping.DetailsClass.PropertySetProperties.FacPerCamps, ref d._FacPerCamps);
                }
                private static global::System.Collections.IEnumerable _FacPerCamps_GetEntityCollection(global::LightSwitchApplication.Camping.DetailsClass d)
                {
                    return d.ImplementationEntity.FacPerCamps;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, int>.Data _camp_id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, string>.Data _camp_adres;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, int>.Data _camp_cap;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>.Data _CampingsPerFestivals;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Camping, global::LightSwitchApplication.Camping.DetailsClass, global::LightSwitchApplication.FacPerCamp>.Data _FacPerCamps;
            
        }
    
        #endregion
    }
    
    #endregion
}
