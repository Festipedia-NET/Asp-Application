
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Workspace
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class DataWorkspace : global::Microsoft.LightSwitch.Framework.Base.DataWorkspace<global::LightSwitchApplication.DataWorkspace, global::LightSwitchApplication.DataWorkspace.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of a DataWorkspace.  Changes can be made to data sources in the new instance independent of changes made to data sources in the default DataWorkspace.
        /// </summary>
        public DataWorkspace() : base()
        {
        }
    
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// Gets the groep15_festivalsData datasource.  This provides members to query and update data in the data source.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.groep15_festivalsDataService groep15_festivalsData
        {
            get
            {
                return global::LightSwitchApplication.DataWorkspace.DetailsClass.GetValue(this, global::LightSwitchApplication.DataWorkspace.DetailsClass.PropertySetProperties.groep15_festivalsData);
            }
        }
        
        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.DataWorkspaceDetails<global::LightSwitchApplication.DataWorkspace, global::LightSwitchApplication.DataWorkspace.DetailsClass, global::LightSwitchApplication.DataWorkspace.DetailsClass.PropertySet>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.DataWorkspace.DetailsClass.PropertySetProperties.groep15_festivalsData;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::LightSwitchApplication.DataWorkspace.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.DataWorkspacePropertySet<global::LightSwitchApplication.DataWorkspace, global::LightSwitchApplication.DataWorkspace.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.DataWorkspaceDataServiceProperty<global::LightSwitchApplication.DataWorkspace, global::LightSwitchApplication.DataWorkspace.DetailsClass, global::LightSwitchApplication.groep15_festivalsDataService> groep15_festivalsData
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.DataWorkspace.DetailsClass.PropertySetProperties.groep15_festivalsData) as global::Microsoft.LightSwitch.Details.Framework.DataWorkspaceDataServiceProperty<global::LightSwitchApplication.DataWorkspace, global::LightSwitchApplication.DataWorkspace.DetailsClass, global::LightSwitchApplication.groep15_festivalsDataService>;
                    }
                }
                
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.DataWorkspaceDataServiceProperty<global::LightSwitchApplication.DataWorkspace, global::LightSwitchApplication.DataWorkspace.DetailsClass, global::LightSwitchApplication.groep15_festivalsDataService>.Entry
                    groep15_festivalsData = new global::Microsoft.LightSwitch.Details.Framework.DataWorkspaceDataServiceProperty<global::LightSwitchApplication.DataWorkspace, global::LightSwitchApplication.DataWorkspace.DetailsClass, global::LightSwitchApplication.groep15_festivalsDataService>.Entry(
                        "groep15_festivalsData",
                        global::LightSwitchApplication.DataWorkspace.DetailsClass.PropertySetProperties._groep15_festivalsData_Stub);
                private static void _groep15_festivalsData_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DataWorkspace.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.DataWorkspaceDataServiceProperty<global::LightSwitchApplication.DataWorkspace, global::LightSwitchApplication.DataWorkspace.DetailsClass, global::LightSwitchApplication.groep15_festivalsDataService>.Data> c, global::LightSwitchApplication.DataWorkspace.DetailsClass d, object sf)
                {
                    c(d, ref d._groep15_festivalsData, sf);
                }
                 
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.DataWorkspaceDataServiceProperty<global::LightSwitchApplication.DataWorkspace, global::LightSwitchApplication.DataWorkspace.DetailsClass, global::LightSwitchApplication.groep15_festivalsDataService>.Data _groep15_festivalsData;
            
        }
    
        #endregion
    }
    
    #endregion
    
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the groep15_festivalsData datasource.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class groep15_festivalsData : global::Microsoft.LightSwitch.Framework.Base.DataService<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// This constructor is used for the internal LightSwitch framework. Use DataWorkspace instead.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public groep15_festivalsData() : base()
        {
        }
    
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// Gets the Bands entity set.  The entity set provides members to access entities of a specific type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Band> Bands
        {
            get
            {
                return global::LightSwitchApplication.groep15_festivalsData.DetailsClass.GetValue(this, global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.Bands);
            }
        }
        
        /// <summary>
        /// Gets the BandsPerFestivals entity set.  The entity set provides members to access entities of a specific type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.BandsPerFestival> BandsPerFestivals
        {
            get
            {
                return global::LightSwitchApplication.groep15_festivalsData.DetailsClass.GetValue(this, global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.BandsPerFestivals);
            }
        }
        
        /// <summary>
        /// Gets the Campings entity set.  The entity set provides members to access entities of a specific type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Camping> Campings
        {
            get
            {
                return global::LightSwitchApplication.groep15_festivalsData.DetailsClass.GetValue(this, global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.Campings);
            }
        }
        
        /// <summary>
        /// Gets the CampingsPerFestivals entity set.  The entity set provides members to access entities of a specific type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.CampingsPerFestival> CampingsPerFestivals
        {
            get
            {
                return global::LightSwitchApplication.groep15_festivalsData.DetailsClass.GetValue(this, global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.CampingsPerFestivals);
            }
        }
        
        /// <summary>
        /// Gets the Faciliteitens entity set.  The entity set provides members to access entities of a specific type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Faciliteiten> Faciliteitens
        {
            get
            {
                return global::LightSwitchApplication.groep15_festivalsData.DetailsClass.GetValue(this, global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.Faciliteitens);
            }
        }
        
        /// <summary>
        /// Gets the FacPerCamps entity set.  The entity set provides members to access entities of a specific type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.FacPerCamp> FacPerCamps
        {
            get
            {
                return global::LightSwitchApplication.groep15_festivalsData.DetailsClass.GetValue(this, global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.FacPerCamps);
            }
        }
        
        /// <summary>
        /// Gets the Festivals entity set.  The entity set provides members to access entities of a specific type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Festival> Festivals
        {
            get
            {
                return global::LightSwitchApplication.groep15_festivalsData.DetailsClass.GetValue(this, global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.Festivals);
            }
        }
        
        /// <summary>
        /// Gets the GeregistreerdeGebruikers entity set.  The entity set provides members to access entities of a specific type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.GeregistreerdeGebruiker> GeregistreerdeGebruikers
        {
            get
            {
                return global::LightSwitchApplication.groep15_festivalsData.DetailsClass.GetValue(this, global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.GeregistreerdeGebruikers);
            }
        }
        
        /// <summary>
        /// Gets the Podias entity set.  The entity set provides members to access entities of a specific type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Podia> Podias
        {
            get
            {
                return global::LightSwitchApplication.groep15_festivalsData.DetailsClass.GetValue(this, global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.Podias);
            }
        }
        
        /// <summary>
        /// Gets the sysdiagrams entity set.  The entity set provides members to access entities of a specific type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.sysdiagram> sysdiagrams
        {
            get
            {
                return global::LightSwitchApplication.groep15_festivalsData.DetailsClass.GetValue(this, global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.sysdiagrams);
            }
        }
        
        /// <summary>
        /// Gets the Tickets entity set.  The entity set provides members to access entities of a specific type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Ticket> Tickets
        {
            get
            {
                return global::LightSwitchApplication.groep15_festivalsData.DetailsClass.GetValue(this, global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.Tickets);
            }
        }
        
        /// <summary>
        /// Gets the Tickettypes entity set.  The entity set provides members to access entities of a specific type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Tickettype> Tickettypes
        {
            get
            {
                return global::LightSwitchApplication.groep15_festivalsData.DetailsClass.GetValue(this, global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.Tickettypes);
            }
        }
        
        /// <summary>
        /// Gets the TickettypesPerFestivals entity set.  The entity set provides members to access entities of a specific type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.TickettypesPerFestival> TickettypesPerFestivals
        {
            get
            {
                return global::LightSwitchApplication.groep15_festivalsData.DetailsClass.GetValue(this, global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.TickettypesPerFestivals);
            }
        }
        
        #endregion
    
        #region Queries
    
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s).
        /// </summary>
        /// <param name="band_id">
        /// The value of the 'band_id' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.Band Bands_Single(global::System.Nullable<int> band_id)
        {
            return this.Details.Methods.Bands_Single.CreateInvocation(band_id).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s) or null if no such entity exists.
        /// </summary>
        /// <param name="band_id">
        /// The value of the 'band_id' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.Band Bands_SingleOrDefault(global::System.Nullable<int> band_id)
        {
            return this.Details.Methods.Bands_SingleOrDefault.CreateInvocation(band_id).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s).
        /// </summary>
        /// <param name="fest_id">
        /// The value of the 'fest_id' key property of the entity to retrieve.
        /// </param>
        /// <param name="band_id">
        /// The value of the 'band_id' key property of the entity to retrieve.
        /// </param>
        /// <param name="datum">
        /// The value of the 'datum' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.BandsPerFestival BandsPerFestivals_Single(global::System.Nullable<int> fest_id, global::System.Nullable<int> band_id, global::System.Nullable<global::System.DateTime> datum)
        {
            return this.Details.Methods.BandsPerFestivals_Single.CreateInvocation(fest_id, band_id, datum).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s) or null if no such entity exists.
        /// </summary>
        /// <param name="fest_id">
        /// The value of the 'fest_id' key property of the entity to retrieve.
        /// </param>
        /// <param name="band_id">
        /// The value of the 'band_id' key property of the entity to retrieve.
        /// </param>
        /// <param name="datum">
        /// The value of the 'datum' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.BandsPerFestival BandsPerFestivals_SingleOrDefault(global::System.Nullable<int> fest_id, global::System.Nullable<int> band_id, global::System.Nullable<global::System.DateTime> datum)
        {
            return this.Details.Methods.BandsPerFestivals_SingleOrDefault.CreateInvocation(fest_id, band_id, datum).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s).
        /// </summary>
        /// <param name="camp_id">
        /// The value of the 'camp_id' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.Camping Campings_Single(global::System.Nullable<int> camp_id)
        {
            return this.Details.Methods.Campings_Single.CreateInvocation(camp_id).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s) or null if no such entity exists.
        /// </summary>
        /// <param name="camp_id">
        /// The value of the 'camp_id' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.Camping Campings_SingleOrDefault(global::System.Nullable<int> camp_id)
        {
            return this.Details.Methods.Campings_SingleOrDefault.CreateInvocation(camp_id).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s).
        /// </summary>
        /// <param name="fest_id">
        /// The value of the 'fest_id' key property of the entity to retrieve.
        /// </param>
        /// <param name="camp_id">
        /// The value of the 'camp_id' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.CampingsPerFestival CampingsPerFestivals_Single(global::System.Nullable<int> fest_id, global::System.Nullable<int> camp_id)
        {
            return this.Details.Methods.CampingsPerFestivals_Single.CreateInvocation(fest_id, camp_id).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s) or null if no such entity exists.
        /// </summary>
        /// <param name="fest_id">
        /// The value of the 'fest_id' key property of the entity to retrieve.
        /// </param>
        /// <param name="camp_id">
        /// The value of the 'camp_id' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.CampingsPerFestival CampingsPerFestivals_SingleOrDefault(global::System.Nullable<int> fest_id, global::System.Nullable<int> camp_id)
        {
            return this.Details.Methods.CampingsPerFestivals_SingleOrDefault.CreateInvocation(fest_id, camp_id).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s).
        /// </summary>
        /// <param name="fac_id">
        /// The value of the 'fac_id' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.Faciliteiten Faciliteitens_Single(global::System.Nullable<int> fac_id)
        {
            return this.Details.Methods.Faciliteitens_Single.CreateInvocation(fac_id).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s) or null if no such entity exists.
        /// </summary>
        /// <param name="fac_id">
        /// The value of the 'fac_id' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.Faciliteiten Faciliteitens_SingleOrDefault(global::System.Nullable<int> fac_id)
        {
            return this.Details.Methods.Faciliteitens_SingleOrDefault.CreateInvocation(fac_id).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s).
        /// </summary>
        /// <param name="camp_id">
        /// The value of the 'camp_id' key property of the entity to retrieve.
        /// </param>
        /// <param name="fac_id">
        /// The value of the 'fac_id' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.FacPerCamp FacPerCamps_Single(global::System.Nullable<int> camp_id, global::System.Nullable<int> fac_id)
        {
            return this.Details.Methods.FacPerCamps_Single.CreateInvocation(camp_id, fac_id).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s) or null if no such entity exists.
        /// </summary>
        /// <param name="camp_id">
        /// The value of the 'camp_id' key property of the entity to retrieve.
        /// </param>
        /// <param name="fac_id">
        /// The value of the 'fac_id' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.FacPerCamp FacPerCamps_SingleOrDefault(global::System.Nullable<int> camp_id, global::System.Nullable<int> fac_id)
        {
            return this.Details.Methods.FacPerCamps_SingleOrDefault.CreateInvocation(camp_id, fac_id).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s).
        /// </summary>
        /// <param name="fest_id">
        /// The value of the 'fest_id' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.Festival Festivals_Single(global::System.Nullable<int> fest_id)
        {
            return this.Details.Methods.Festivals_Single.CreateInvocation(fest_id).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s) or null if no such entity exists.
        /// </summary>
        /// <param name="fest_id">
        /// The value of the 'fest_id' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.Festival Festivals_SingleOrDefault(global::System.Nullable<int> fest_id)
        {
            return this.Details.Methods.Festivals_SingleOrDefault.CreateInvocation(fest_id).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s).
        /// </summary>
        /// <param name="gebr_id">
        /// The value of the 'gebr_id' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.GeregistreerdeGebruiker GeregistreerdeGebruikers_Single(global::System.Nullable<int> gebr_id)
        {
            return this.Details.Methods.GeregistreerdeGebruikers_Single.CreateInvocation(gebr_id).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s) or null if no such entity exists.
        /// </summary>
        /// <param name="gebr_id">
        /// The value of the 'gebr_id' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.GeregistreerdeGebruiker GeregistreerdeGebruikers_SingleOrDefault(global::System.Nullable<int> gebr_id)
        {
            return this.Details.Methods.GeregistreerdeGebruikers_SingleOrDefault.CreateInvocation(gebr_id).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s).
        /// </summary>
        /// <param name="pod_id">
        /// The value of the 'pod_id' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.Podia Podias_Single(global::System.Nullable<int> pod_id)
        {
            return this.Details.Methods.Podias_Single.CreateInvocation(pod_id).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s) or null if no such entity exists.
        /// </summary>
        /// <param name="pod_id">
        /// The value of the 'pod_id' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.Podia Podias_SingleOrDefault(global::System.Nullable<int> pod_id)
        {
            return this.Details.Methods.Podias_SingleOrDefault.CreateInvocation(pod_id).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s).
        /// </summary>
        /// <param name="diagram_id">
        /// The value of the 'diagram_id' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.sysdiagram sysdiagrams_Single(global::System.Nullable<int> diagram_id)
        {
            return this.Details.Methods.sysdiagrams_Single.CreateInvocation(diagram_id).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s) or null if no such entity exists.
        /// </summary>
        /// <param name="diagram_id">
        /// The value of the 'diagram_id' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.sysdiagram sysdiagrams_SingleOrDefault(global::System.Nullable<int> diagram_id)
        {
            return this.Details.Methods.sysdiagrams_SingleOrDefault.CreateInvocation(diagram_id).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s).
        /// </summary>
        /// <param name="fest_id">
        /// The value of the 'fest_id' key property of the entity to retrieve.
        /// </param>
        /// <param name="gebr_id">
        /// The value of the 'gebr_id' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.Ticket Tickets_Single(global::System.Nullable<int> fest_id, global::System.Nullable<int> gebr_id)
        {
            return this.Details.Methods.Tickets_Single.CreateInvocation(fest_id, gebr_id).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s) or null if no such entity exists.
        /// </summary>
        /// <param name="fest_id">
        /// The value of the 'fest_id' key property of the entity to retrieve.
        /// </param>
        /// <param name="gebr_id">
        /// The value of the 'gebr_id' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.Ticket Tickets_SingleOrDefault(global::System.Nullable<int> fest_id, global::System.Nullable<int> gebr_id)
        {
            return this.Details.Methods.Tickets_SingleOrDefault.CreateInvocation(fest_id, gebr_id).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s).
        /// </summary>
        /// <param name="typ_id">
        /// The value of the 'typ_id' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.Tickettype Tickettypes_Single(global::System.Nullable<int> typ_id)
        {
            return this.Details.Methods.Tickettypes_Single.CreateInvocation(typ_id).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s) or null if no such entity exists.
        /// </summary>
        /// <param name="typ_id">
        /// The value of the 'typ_id' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.Tickettype Tickettypes_SingleOrDefault(global::System.Nullable<int> typ_id)
        {
            return this.Details.Methods.Tickettypes_SingleOrDefault.CreateInvocation(typ_id).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s).
        /// </summary>
        /// <param name="fest_id">
        /// The value of the 'fest_id' key property of the entity to retrieve.
        /// </param>
        /// <param name="typ_id">
        /// The value of the 'typ_id' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.TickettypesPerFestival TickettypesPerFestivals_Single(global::System.Nullable<int> fest_id, global::System.Nullable<int> typ_id)
        {
            return this.Details.Methods.TickettypesPerFestivals_Single.CreateInvocation(fest_id, typ_id).Execute();
        }
        
        /// <summary>
        /// Returns the entity whose identity is specified by the parameter(s) or null if no such entity exists.
        /// </summary>
        /// <param name="fest_id">
        /// The value of the 'fest_id' key property of the entity to retrieve.
        /// </param>
        /// <param name="typ_id">
        /// The value of the 'typ_id' key property of the entity to retrieve.
        /// </param>
        public global::LightSwitchApplication.TickettypesPerFestival TickettypesPerFestivals_SingleOrDefault(global::System.Nullable<int> fest_id, global::System.Nullable<int> typ_id)
        {
            return this.Details.Methods.TickettypesPerFestivals_SingleOrDefault.CreateInvocation(fest_id, typ_id).Execute();
        }
        
        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.DataServiceDetails<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySet, global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSet>
        {
    
            static DetailsClass()
            {
                var initializeMethodEntry = global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.Bands_Single;
                var initializePropertyEntry = global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.Bands;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet : global::Microsoft.LightSwitch.Details.Framework.Base.DataServiceMethodSet<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass>
            {
    
                public MethodSet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Band> Bands_Single
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.Bands_Single) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Band>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Band> Bands_SingleOrDefault
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.Bands_SingleOrDefault) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Band>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.BandsPerFestival> BandsPerFestivals_Single
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.BandsPerFestivals_Single) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.BandsPerFestival>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.BandsPerFestival> BandsPerFestivals_SingleOrDefault
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.BandsPerFestivals_SingleOrDefault) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.BandsPerFestival>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Camping> Campings_Single
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.Campings_Single) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Camping>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Camping> Campings_SingleOrDefault
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.Campings_SingleOrDefault) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Camping>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.CampingsPerFestival> CampingsPerFestivals_Single
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.CampingsPerFestivals_Single) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.CampingsPerFestival> CampingsPerFestivals_SingleOrDefault
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.CampingsPerFestivals_SingleOrDefault) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Faciliteiten> Faciliteitens_Single
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.Faciliteitens_Single) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Faciliteiten>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Faciliteiten> Faciliteitens_SingleOrDefault
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.Faciliteitens_SingleOrDefault) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Faciliteiten>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.FacPerCamp> FacPerCamps_Single
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.FacPerCamps_Single) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.FacPerCamp>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.FacPerCamp> FacPerCamps_SingleOrDefault
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.FacPerCamps_SingleOrDefault) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.FacPerCamp>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Festival> Festivals_Single
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.Festivals_Single) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Festival>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Festival> Festivals_SingleOrDefault
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.Festivals_SingleOrDefault) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Festival>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.GeregistreerdeGebruiker> GeregistreerdeGebruikers_Single
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.GeregistreerdeGebruikers_Single) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.GeregistreerdeGebruiker>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.GeregistreerdeGebruiker> GeregistreerdeGebruikers_SingleOrDefault
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.GeregistreerdeGebruikers_SingleOrDefault) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.GeregistreerdeGebruiker>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Podia> Podias_Single
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.Podias_Single) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Podia>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Podia> Podias_SingleOrDefault
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.Podias_SingleOrDefault) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Podia>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.sysdiagram> sysdiagrams_Single
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.sysdiagrams_Single) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.sysdiagram>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.sysdiagram> sysdiagrams_SingleOrDefault
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.sysdiagrams_SingleOrDefault) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.sysdiagram>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Ticket> Tickets_Single
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.Tickets_Single) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Ticket>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Ticket> Tickets_SingleOrDefault
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.Tickets_SingleOrDefault) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Ticket>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Tickettype> Tickettypes_Single
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.Tickettypes_Single) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Tickettype>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Tickettype> Tickettypes_SingleOrDefault
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.Tickettypes_SingleOrDefault) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Tickettype>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.TickettypesPerFestival> TickettypesPerFestivals_Single
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.TickettypesPerFestivals_Single) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.TickettypesPerFestival>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.TickettypesPerFestival> TickettypesPerFestivals_SingleOrDefault
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties.TickettypesPerFestivals_SingleOrDefault) as global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.TickettypesPerFestival>;
                    }
                }
                
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.DataServicePropertySet<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Band> Bands
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.Bands) as global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Band>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.BandsPerFestival> BandsPerFestivals
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.BandsPerFestivals) as global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.BandsPerFestival>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Camping> Campings
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.Campings) as global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Camping>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.CampingsPerFestival> CampingsPerFestivals
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.CampingsPerFestivals) as global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Faciliteiten> Faciliteitens
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.Faciliteitens) as global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Faciliteiten>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.FacPerCamp> FacPerCamps
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.FacPerCamps) as global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.FacPerCamp>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Festival> Festivals
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.Festivals) as global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Festival>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.GeregistreerdeGebruiker> GeregistreerdeGebruikers
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.GeregistreerdeGebruikers) as global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.GeregistreerdeGebruiker>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Podia> Podias
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.Podias) as global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Podia>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.sysdiagram> sysdiagrams
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.sysdiagrams) as global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.sysdiagram>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Ticket> Tickets
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.Tickets) as global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Ticket>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Tickettype> Tickettypes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.Tickettypes) as global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Tickettype>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.TickettypesPerFestival> TickettypesPerFestivals
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties.TickettypesPerFestivals) as global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.TickettypesPerFestival>;
                    }
                }
                
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class MethodSetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Band>.Entry
                    Bands_Single = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Band>.Entry(
                        "Bands_Single",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._Bands_Single_Stub);
                private static void _Bands_Single_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Band>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._Bands_Single, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Band>.Entry
                    Bands_SingleOrDefault = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Band>.Entry(
                        "Bands_SingleOrDefault",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._Bands_SingleOrDefault_Stub);
                private static void _Bands_SingleOrDefault_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Band>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._Bands_SingleOrDefault, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.BandsPerFestival>.Entry
                    BandsPerFestivals_Single = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.BandsPerFestival>.Entry(
                        "BandsPerFestivals_Single",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._BandsPerFestivals_Single_Stub);
                private static void _BandsPerFestivals_Single_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.BandsPerFestival>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._BandsPerFestivals_Single, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.BandsPerFestival>.Entry
                    BandsPerFestivals_SingleOrDefault = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.BandsPerFestival>.Entry(
                        "BandsPerFestivals_SingleOrDefault",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._BandsPerFestivals_SingleOrDefault_Stub);
                private static void _BandsPerFestivals_SingleOrDefault_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.BandsPerFestival>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._BandsPerFestivals_SingleOrDefault, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Camping>.Entry
                    Campings_Single = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Camping>.Entry(
                        "Campings_Single",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._Campings_Single_Stub);
                private static void _Campings_Single_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Camping>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._Campings_Single, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Camping>.Entry
                    Campings_SingleOrDefault = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Camping>.Entry(
                        "Campings_SingleOrDefault",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._Campings_SingleOrDefault_Stub);
                private static void _Campings_SingleOrDefault_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Camping>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._Campings_SingleOrDefault, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>.Entry
                    CampingsPerFestivals_Single = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>.Entry(
                        "CampingsPerFestivals_Single",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._CampingsPerFestivals_Single_Stub);
                private static void _CampingsPerFestivals_Single_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._CampingsPerFestivals_Single, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>.Entry
                    CampingsPerFestivals_SingleOrDefault = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>.Entry(
                        "CampingsPerFestivals_SingleOrDefault",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._CampingsPerFestivals_SingleOrDefault_Stub);
                private static void _CampingsPerFestivals_SingleOrDefault_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._CampingsPerFestivals_SingleOrDefault, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Faciliteiten>.Entry
                    Faciliteitens_Single = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Faciliteiten>.Entry(
                        "Faciliteitens_Single",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._Faciliteitens_Single_Stub);
                private static void _Faciliteitens_Single_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Faciliteiten>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._Faciliteitens_Single, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Faciliteiten>.Entry
                    Faciliteitens_SingleOrDefault = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Faciliteiten>.Entry(
                        "Faciliteitens_SingleOrDefault",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._Faciliteitens_SingleOrDefault_Stub);
                private static void _Faciliteitens_SingleOrDefault_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Faciliteiten>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._Faciliteitens_SingleOrDefault, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.FacPerCamp>.Entry
                    FacPerCamps_Single = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.FacPerCamp>.Entry(
                        "FacPerCamps_Single",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._FacPerCamps_Single_Stub);
                private static void _FacPerCamps_Single_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.FacPerCamp>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._FacPerCamps_Single, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.FacPerCamp>.Entry
                    FacPerCamps_SingleOrDefault = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.FacPerCamp>.Entry(
                        "FacPerCamps_SingleOrDefault",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._FacPerCamps_SingleOrDefault_Stub);
                private static void _FacPerCamps_SingleOrDefault_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.FacPerCamp>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._FacPerCamps_SingleOrDefault, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Festival>.Entry
                    Festivals_Single = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Festival>.Entry(
                        "Festivals_Single",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._Festivals_Single_Stub);
                private static void _Festivals_Single_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Festival>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._Festivals_Single, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Festival>.Entry
                    Festivals_SingleOrDefault = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Festival>.Entry(
                        "Festivals_SingleOrDefault",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._Festivals_SingleOrDefault_Stub);
                private static void _Festivals_SingleOrDefault_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Festival>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._Festivals_SingleOrDefault, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.GeregistreerdeGebruiker>.Entry
                    GeregistreerdeGebruikers_Single = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.GeregistreerdeGebruiker>.Entry(
                        "GeregistreerdeGebruikers_Single",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._GeregistreerdeGebruikers_Single_Stub);
                private static void _GeregistreerdeGebruikers_Single_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.GeregistreerdeGebruiker>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._GeregistreerdeGebruikers_Single, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.GeregistreerdeGebruiker>.Entry
                    GeregistreerdeGebruikers_SingleOrDefault = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.GeregistreerdeGebruiker>.Entry(
                        "GeregistreerdeGebruikers_SingleOrDefault",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._GeregistreerdeGebruikers_SingleOrDefault_Stub);
                private static void _GeregistreerdeGebruikers_SingleOrDefault_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.GeregistreerdeGebruiker>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._GeregistreerdeGebruikers_SingleOrDefault, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Podia>.Entry
                    Podias_Single = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Podia>.Entry(
                        "Podias_Single",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._Podias_Single_Stub);
                private static void _Podias_Single_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Podia>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._Podias_Single, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Podia>.Entry
                    Podias_SingleOrDefault = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Podia>.Entry(
                        "Podias_SingleOrDefault",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._Podias_SingleOrDefault_Stub);
                private static void _Podias_SingleOrDefault_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Podia>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._Podias_SingleOrDefault, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.sysdiagram>.Entry
                    sysdiagrams_Single = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.sysdiagram>.Entry(
                        "sysdiagrams_Single",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._sysdiagrams_Single_Stub);
                private static void _sysdiagrams_Single_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.sysdiagram>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._sysdiagrams_Single, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.sysdiagram>.Entry
                    sysdiagrams_SingleOrDefault = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.sysdiagram>.Entry(
                        "sysdiagrams_SingleOrDefault",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._sysdiagrams_SingleOrDefault_Stub);
                private static void _sysdiagrams_SingleOrDefault_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.sysdiagram>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._sysdiagrams_SingleOrDefault, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Ticket>.Entry
                    Tickets_Single = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Ticket>.Entry(
                        "Tickets_Single",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._Tickets_Single_Stub);
                private static void _Tickets_Single_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Ticket>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._Tickets_Single, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Ticket>.Entry
                    Tickets_SingleOrDefault = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Ticket>.Entry(
                        "Tickets_SingleOrDefault",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._Tickets_SingleOrDefault_Stub);
                private static void _Tickets_SingleOrDefault_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Ticket>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._Tickets_SingleOrDefault, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Tickettype>.Entry
                    Tickettypes_Single = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Tickettype>.Entry(
                        "Tickettypes_Single",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._Tickettypes_Single_Stub);
                private static void _Tickettypes_Single_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Tickettype>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._Tickettypes_Single, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Tickettype>.Entry
                    Tickettypes_SingleOrDefault = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Tickettype>.Entry(
                        "Tickettypes_SingleOrDefault",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._Tickettypes_SingleOrDefault_Stub);
                private static void _Tickettypes_SingleOrDefault_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Tickettype>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._Tickettypes_SingleOrDefault, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.TickettypesPerFestival>.Entry
                    TickettypesPerFestivals_Single = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.TickettypesPerFestival>.Entry(
                        "TickettypesPerFestivals_Single",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._TickettypesPerFestivals_Single_Stub);
                private static void _TickettypesPerFestivals_Single_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.TickettypesPerFestival>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._TickettypesPerFestivals_Single, sf);
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.TickettypesPerFestival>.Entry
                    TickettypesPerFestivals_SingleOrDefault = new global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.TickettypesPerFestival>.Entry(
                        "TickettypesPerFestivals_SingleOrDefault",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.MethodSetProperties._TickettypesPerFestivals_SingleOrDefault_Stub);
                private static void _TickettypesPerFestivals_SingleOrDefault_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.TickettypesPerFestival>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._TickettypesPerFestivals_SingleOrDefault, sf);
                }
    
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Band>.Entry
                    Bands = new global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Band>.Entry(
                        "Bands",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties._Bands_Stub);
                private static void _Bands_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Band>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._Bands, sf);
                }
     
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.BandsPerFestival>.Entry
                    BandsPerFestivals = new global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.BandsPerFestival>.Entry(
                        "BandsPerFestivals",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties._BandsPerFestivals_Stub);
                private static void _BandsPerFestivals_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.BandsPerFestival>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._BandsPerFestivals, sf);
                }
     
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Camping>.Entry
                    Campings = new global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Camping>.Entry(
                        "Campings",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties._Campings_Stub);
                private static void _Campings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Camping>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._Campings, sf);
                }
     
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>.Entry
                    CampingsPerFestivals = new global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>.Entry(
                        "CampingsPerFestivals",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties._CampingsPerFestivals_Stub);
                private static void _CampingsPerFestivals_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._CampingsPerFestivals, sf);
                }
     
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Faciliteiten>.Entry
                    Faciliteitens = new global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Faciliteiten>.Entry(
                        "Faciliteitens",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties._Faciliteitens_Stub);
                private static void _Faciliteitens_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Faciliteiten>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._Faciliteitens, sf);
                }
     
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.FacPerCamp>.Entry
                    FacPerCamps = new global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.FacPerCamp>.Entry(
                        "FacPerCamps",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties._FacPerCamps_Stub);
                private static void _FacPerCamps_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.FacPerCamp>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._FacPerCamps, sf);
                }
     
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Festival>.Entry
                    Festivals = new global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Festival>.Entry(
                        "Festivals",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties._Festivals_Stub);
                private static void _Festivals_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Festival>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._Festivals, sf);
                }
     
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.GeregistreerdeGebruiker>.Entry
                    GeregistreerdeGebruikers = new global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.GeregistreerdeGebruiker>.Entry(
                        "GeregistreerdeGebruikers",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties._GeregistreerdeGebruikers_Stub);
                private static void _GeregistreerdeGebruikers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.GeregistreerdeGebruiker>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._GeregistreerdeGebruikers, sf);
                }
     
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Podia>.Entry
                    Podias = new global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Podia>.Entry(
                        "Podias",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties._Podias_Stub);
                private static void _Podias_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Podia>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._Podias, sf);
                }
     
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.sysdiagram>.Entry
                    sysdiagrams = new global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.sysdiagram>.Entry(
                        "sysdiagrams",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties._sysdiagrams_Stub);
                private static void _sysdiagrams_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.sysdiagram>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._sysdiagrams, sf);
                }
     
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Ticket>.Entry
                    Tickets = new global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Ticket>.Entry(
                        "Tickets",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties._Tickets_Stub);
                private static void _Tickets_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Ticket>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._Tickets, sf);
                }
     
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Tickettype>.Entry
                    Tickettypes = new global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Tickettype>.Entry(
                        "Tickettypes",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties._Tickettypes_Stub);
                private static void _Tickettypes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Tickettype>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._Tickettypes, sf);
                }
     
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.TickettypesPerFestival>.Entry
                    TickettypesPerFestivals = new global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.TickettypesPerFestival>.Entry(
                        "TickettypesPerFestivals",
                        global::LightSwitchApplication.groep15_festivalsData.DetailsClass.PropertySetProperties._TickettypesPerFestivals_Stub);
                private static void _TickettypesPerFestivals_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.TickettypesPerFestival>.Data> c, global::LightSwitchApplication.groep15_festivalsData.DetailsClass d, object sf)
                {
                    c(d, ref d._TickettypesPerFestivals, sf);
                }
     
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Band>.Data _Bands;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.BandsPerFestival>.Data _BandsPerFestivals;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Camping>.Data _Campings;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>.Data _CampingsPerFestivals;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Faciliteiten>.Data _Faciliteitens;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.FacPerCamp>.Data _FacPerCamps;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Festival>.Data _Festivals;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.GeregistreerdeGebruiker>.Data _GeregistreerdeGebruikers;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Podia>.Data _Podias;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.sysdiagram>.Data _sysdiagrams;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Ticket>.Data _Tickets;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Tickettype>.Data _Tickettypes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.DataServiceEntitySetProperty<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.TickettypesPerFestival>.Data _TickettypesPerFestivals;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Band>.Data _Bands_Single;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Band>.Data _Bands_SingleOrDefault;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.BandsPerFestival>.Data _BandsPerFestivals_Single;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.BandsPerFestival>.Data _BandsPerFestivals_SingleOrDefault;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Camping>.Data _Campings_Single;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Camping>.Data _Campings_SingleOrDefault;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>.Data _CampingsPerFestivals_Single;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.CampingsPerFestival>.Data _CampingsPerFestivals_SingleOrDefault;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Faciliteiten>.Data _Faciliteitens_Single;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Faciliteiten>.Data _Faciliteitens_SingleOrDefault;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.FacPerCamp>.Data _FacPerCamps_Single;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.FacPerCamp>.Data _FacPerCamps_SingleOrDefault;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Festival>.Data _Festivals_Single;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Festival>.Data _Festivals_SingleOrDefault;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.GeregistreerdeGebruiker>.Data _GeregistreerdeGebruikers_Single;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.GeregistreerdeGebruiker>.Data _GeregistreerdeGebruikers_SingleOrDefault;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Podia>.Data _Podias_Single;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Podia>.Data _Podias_SingleOrDefault;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.sysdiagram>.Data _sysdiagrams_Single;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.sysdiagram>.Data _sysdiagrams_SingleOrDefault;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Ticket>.Data _Tickets_Single;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Ticket>.Data _Tickets_SingleOrDefault;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Tickettype>.Data _Tickettypes_Single;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.Tickettype>.Data _Tickettypes_SingleOrDefault;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.TickettypesPerFestival>.Data _TickettypesPerFestivals_Single;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.CreateScalarQueryMethod<global::LightSwitchApplication.groep15_festivalsData, global::LightSwitchApplication.groep15_festivalsData.DetailsClass, global::LightSwitchApplication.TickettypesPerFestival>.Data _TickettypesPerFestivals_SingleOrDefault;
            
        }
    
        #endregion
    }
    
    #endregion
    
}
