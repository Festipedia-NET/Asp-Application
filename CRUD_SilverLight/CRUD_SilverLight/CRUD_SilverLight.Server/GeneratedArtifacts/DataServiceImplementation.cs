//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using global::System.Linq;

namespace LightSwitchApplication.Implementation
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class groep15_festivalsDataDataService
        : global::Microsoft.LightSwitch.ServerGenerated.Implementation.DataService<global::LightSwitchApplication.Implementation.groep15_festivalsData>
    {
    
        public groep15_festivalsDataDataService() : base()
        {
        }
    
        protected override global::Microsoft.LightSwitch.IDataService GetDataService(global::Microsoft.LightSwitch.IDataWorkspace dataWorkspace)
        {
            return ((global::LightSwitchApplication.DataWorkspace)dataWorkspace).groep15_festivalsData;
        }
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class groep15_festivalsDataServiceImplementation
        : global::Microsoft.LightSwitch.ServerGenerated.Implementation.DataServiceImplementation<global::LightSwitchApplication.Implementation.groep15_festivalsData>
    {
        public groep15_festivalsDataServiceImplementation(global::Microsoft.LightSwitch.IDataService dataService) : base(dataService)
        {
        }
    
    #region Queries
    #endregion

    #region Protected Methods
        protected override object CreateObject(global::System.Type type)
        {
            if (type == typeof(global::LightSwitchApplication.Implementation.Band))
            {
                return new global::LightSwitchApplication.Implementation.Band();
            }
            if (type == typeof(global::LightSwitchApplication.Implementation.BandsPerFestival))
            {
                return new global::LightSwitchApplication.Implementation.BandsPerFestival();
            }
            if (type == typeof(global::LightSwitchApplication.Implementation.Camping))
            {
                return new global::LightSwitchApplication.Implementation.Camping();
            }
            if (type == typeof(global::LightSwitchApplication.Implementation.CampingsPerFestival))
            {
                return new global::LightSwitchApplication.Implementation.CampingsPerFestival();
            }
            if (type == typeof(global::LightSwitchApplication.Implementation.Faciliteiten))
            {
                return new global::LightSwitchApplication.Implementation.Faciliteiten();
            }
            if (type == typeof(global::LightSwitchApplication.Implementation.FacPerCamp))
            {
                return new global::LightSwitchApplication.Implementation.FacPerCamp();
            }
            if (type == typeof(global::LightSwitchApplication.Implementation.Festival))
            {
                return new global::LightSwitchApplication.Implementation.Festival();
            }
            if (type == typeof(global::LightSwitchApplication.Implementation.GeregistreerdeGebruiker))
            {
                return new global::LightSwitchApplication.Implementation.GeregistreerdeGebruiker();
            }
            if (type == typeof(global::LightSwitchApplication.Implementation.Podia))
            {
                return new global::LightSwitchApplication.Implementation.Podia();
            }
            if (type == typeof(global::LightSwitchApplication.Implementation.sysdiagram))
            {
                return new global::LightSwitchApplication.Implementation.sysdiagram();
            }
            if (type == typeof(global::LightSwitchApplication.Implementation.Ticket))
            {
                return new global::LightSwitchApplication.Implementation.Ticket();
            }
            if (type == typeof(global::LightSwitchApplication.Implementation.Tickettype))
            {
                return new global::LightSwitchApplication.Implementation.Tickettype();
            }
            if (type == typeof(global::LightSwitchApplication.Implementation.TickettypesPerFestival))
            {
                return new global::LightSwitchApplication.Implementation.TickettypesPerFestival();
            }
    
            return base.CreateObject(type);
        }
    
        protected override global::LightSwitchApplication.Implementation.groep15_festivalsData CreateObjectContext()
        {
            string assemblyName = global::System.Reflection.Assembly.GetExecutingAssembly().GetName().Name;
            return new global::LightSwitchApplication.Implementation.groep15_festivalsData(this.GetEntityConnectionString(
                "groep15_festivalsData",
                "res://" + assemblyName + "/groep15_festivalsData.csdl|res://" + assemblyName + "/groep15_festivalsData.ssdl|res://" + assemblyName + "/groep15_festivalsData.msl",
                "System.Data.SqlClient",
                true));
        }
    
        protected override global::Microsoft.LightSwitch.Internal.IEntityImplementation CreateEntityImplementation<T>()
        {
            if (typeof(T) == typeof(global::LightSwitchApplication.Band))
            {
                return new global::LightSwitchApplication.Implementation.Band();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.BandsPerFestival))
            {
                return new global::LightSwitchApplication.Implementation.BandsPerFestival();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Camping))
            {
                return new global::LightSwitchApplication.Implementation.Camping();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.CampingsPerFestival))
            {
                return new global::LightSwitchApplication.Implementation.CampingsPerFestival();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Faciliteiten))
            {
                return new global::LightSwitchApplication.Implementation.Faciliteiten();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.FacPerCamp))
            {
                return new global::LightSwitchApplication.Implementation.FacPerCamp();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Festival))
            {
                return new global::LightSwitchApplication.Implementation.Festival();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.GeregistreerdeGebruiker))
            {
                return new global::LightSwitchApplication.Implementation.GeregistreerdeGebruiker();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Podia))
            {
                return new global::LightSwitchApplication.Implementation.Podia();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.sysdiagram))
            {
                return new global::LightSwitchApplication.Implementation.sysdiagram();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Ticket))
            {
                return new global::LightSwitchApplication.Implementation.Ticket();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Tickettype))
            {
                return new global::LightSwitchApplication.Implementation.Tickettype();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.TickettypesPerFestival))
            {
                return new global::LightSwitchApplication.Implementation.TickettypesPerFestival();
            }
            return null;
        }
    
    #endregion
    
    }
    
    #region DataServiceImplementationFactory
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.IDataServiceFactory))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class __DataServiceFactory :
        global::Microsoft.LightSwitch.ServerGenerated.Implementation.DataServiceFactory
    {
    
        protected override global::Microsoft.LightSwitch.IDataService CreateDataService(global::System.Type dataServiceType)
        {
            if (dataServiceType == typeof(global::LightSwitchApplication.groep15_festivalsDataService))
            {
                return new global::LightSwitchApplication.groep15_festivalsDataService();
            }
            return base.CreateDataService(dataServiceType);
        }
    
        protected override global::Microsoft.LightSwitch.Internal.IDataServiceImplementation CreateDataServiceImplementation<TDataService>(TDataService dataService)
        {
            if (typeof(TDataService) == typeof(global::LightSwitchApplication.groep15_festivalsDataService))
            {
                return new global::LightSwitchApplication.Implementation.groep15_festivalsDataServiceImplementation(dataService);
            }
            return base.CreateDataServiceImplementation(dataService);
        }
    }
    #endregion
    
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.ITypeMappingProvider))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class __TypeMapping
        : global::Microsoft.LightSwitch.Internal.ITypeMappingProvider
    {
        global::System.Type global::Microsoft.LightSwitch.Internal.ITypeMappingProvider.GetImplementationType(global::System.Type definitionType)
        {
            if (typeof(global::LightSwitchApplication.Band) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Band);
            }
            if (typeof(global::LightSwitchApplication.BandsPerFestival) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.BandsPerFestival);
            }
            if (typeof(global::LightSwitchApplication.Camping) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Camping);
            }
            if (typeof(global::LightSwitchApplication.CampingsPerFestival) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.CampingsPerFestival);
            }
            if (typeof(global::LightSwitchApplication.Faciliteiten) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Faciliteiten);
            }
            if (typeof(global::LightSwitchApplication.FacPerCamp) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.FacPerCamp);
            }
            if (typeof(global::LightSwitchApplication.Festival) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Festival);
            }
            if (typeof(global::LightSwitchApplication.GeregistreerdeGebruiker) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.GeregistreerdeGebruiker);
            }
            if (typeof(global::LightSwitchApplication.Podia) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Podia);
            }
            if (typeof(global::LightSwitchApplication.sysdiagram) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.sysdiagram);
            }
            if (typeof(global::LightSwitchApplication.Ticket) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Ticket);
            }
            if (typeof(global::LightSwitchApplication.Tickettype) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Tickettype);
            }
            if (typeof(global::LightSwitchApplication.TickettypesPerFestival) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.TickettypesPerFestival);
            }
            return null;
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class Band :
        global::LightSwitchApplication.Band.DetailsClass.IImplementation
    {
    
        global::System.Collections.IEnumerable global::LightSwitchApplication.Band.DetailsClass.IImplementation.BandsPerFestivals
        {
            get
            {
                return this.BandsPerFestivals;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class BandsPerFestival :
        global::LightSwitchApplication.BandsPerFestival.DetailsClass.IImplementation
    {
    
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.BandsPerFestival.DetailsClass.IImplementation.Band
        {
            get
            {
                return this.Band;
            }
            set
            {
                this.Band = (global::LightSwitchApplication.Implementation.Band)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("Band");
                }
            }
        }
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.BandsPerFestival.DetailsClass.IImplementation.Festival
        {
            get
            {
                return this.Festival;
            }
            set
            {
                this.Festival = (global::LightSwitchApplication.Implementation.Festival)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("Festival");
                }
            }
        }
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.BandsPerFestival.DetailsClass.IImplementation.Podia
        {
            get
            {
                return this.Podia;
            }
            set
            {
                this.Podia = (global::LightSwitchApplication.Implementation.Podia)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("Podia");
                }
            }
        }
        
        partial void Onband_idChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("Band");
            }
        }
        
        partial void Onfest_idChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("Festival");
            }
        }
        
        partial void Onpod_idChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("Podia");
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class Camping :
        global::LightSwitchApplication.Camping.DetailsClass.IImplementation
    {
    
        global::System.Collections.IEnumerable global::LightSwitchApplication.Camping.DetailsClass.IImplementation.CampingsPerFestivals
        {
            get
            {
                return this.CampingsPerFestivals;
            }
        }
        
        global::System.Collections.IEnumerable global::LightSwitchApplication.Camping.DetailsClass.IImplementation.FacPerCamps
        {
            get
            {
                return this.FacPerCamps;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class CampingsPerFestival :
        global::LightSwitchApplication.CampingsPerFestival.DetailsClass.IImplementation
    {
    
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.CampingsPerFestival.DetailsClass.IImplementation.Camping
        {
            get
            {
                return this.Camping;
            }
            set
            {
                this.Camping = (global::LightSwitchApplication.Implementation.Camping)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("Camping");
                }
            }
        }
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.CampingsPerFestival.DetailsClass.IImplementation.Festival
        {
            get
            {
                return this.Festival;
            }
            set
            {
                this.Festival = (global::LightSwitchApplication.Implementation.Festival)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("Festival");
                }
            }
        }
        
        partial void Oncamp_idChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("Camping");
            }
        }
        
        partial void Onfest_idChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("Festival");
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class Faciliteiten :
        global::LightSwitchApplication.Faciliteiten.DetailsClass.IImplementation
    {
    
        global::System.Collections.IEnumerable global::LightSwitchApplication.Faciliteiten.DetailsClass.IImplementation.FacPerCamps
        {
            get
            {
                return this.FacPerCamps;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class FacPerCamp :
        global::LightSwitchApplication.FacPerCamp.DetailsClass.IImplementation
    {
    
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.FacPerCamp.DetailsClass.IImplementation.Camping
        {
            get
            {
                return this.Camping;
            }
            set
            {
                this.Camping = (global::LightSwitchApplication.Implementation.Camping)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("Camping");
                }
            }
        }
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.FacPerCamp.DetailsClass.IImplementation.Faciliteiten
        {
            get
            {
                return this.Faciliteiten;
            }
            set
            {
                this.Faciliteiten = (global::LightSwitchApplication.Implementation.Faciliteiten)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("Faciliteiten");
                }
            }
        }
        
        partial void Oncamp_idChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("Camping");
            }
        }
        
        partial void Onfac_idChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("Faciliteiten");
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class Festival :
        global::LightSwitchApplication.Festival.DetailsClass.IImplementation
    {
    
        global::System.Collections.IEnumerable global::LightSwitchApplication.Festival.DetailsClass.IImplementation.BandsPerFestivals
        {
            get
            {
                return this.BandsPerFestivals;
            }
        }
        
        global::System.Collections.IEnumerable global::LightSwitchApplication.Festival.DetailsClass.IImplementation.CampingsPerFestivals
        {
            get
            {
                return this.CampingsPerFestivals;
            }
        }
        
        global::System.Collections.IEnumerable global::LightSwitchApplication.Festival.DetailsClass.IImplementation.Tickets
        {
            get
            {
                return this.Tickets;
            }
        }
        
        global::System.Collections.IEnumerable global::LightSwitchApplication.Festival.DetailsClass.IImplementation.TickettypesPerFestivals
        {
            get
            {
                return this.TickettypesPerFestivals;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class GeregistreerdeGebruiker :
        global::LightSwitchApplication.GeregistreerdeGebruiker.DetailsClass.IImplementation
    {
    
        global::System.Collections.IEnumerable global::LightSwitchApplication.GeregistreerdeGebruiker.DetailsClass.IImplementation.Tickets
        {
            get
            {
                return this.Tickets;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class Podia :
        global::LightSwitchApplication.Podia.DetailsClass.IImplementation
    {
    
        global::System.Collections.IEnumerable global::LightSwitchApplication.Podia.DetailsClass.IImplementation.BandsPerFestivals
        {
            get
            {
                return this.BandsPerFestivals;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class sysdiagram :
        global::LightSwitchApplication.sysdiagram.DetailsClass.IImplementation
    {
    
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class Ticket :
        global::LightSwitchApplication.Ticket.DetailsClass.IImplementation
    {
    
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Ticket.DetailsClass.IImplementation.Festival
        {
            get
            {
                return this.Festival;
            }
            set
            {
                this.Festival = (global::LightSwitchApplication.Implementation.Festival)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("Festival");
                }
            }
        }
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Ticket.DetailsClass.IImplementation.GeregistreerdeGebruiker
        {
            get
            {
                return this.GeregistreerdeGebruiker;
            }
            set
            {
                this.GeregistreerdeGebruiker = (global::LightSwitchApplication.Implementation.GeregistreerdeGebruiker)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("GeregistreerdeGebruiker");
                }
            }
        }
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Ticket.DetailsClass.IImplementation.Tickettype
        {
            get
            {
                return this.Tickettype;
            }
            set
            {
                this.Tickettype = (global::LightSwitchApplication.Implementation.Tickettype)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("Tickettype");
                }
            }
        }
        
        partial void Onfest_idChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("Festival");
            }
        }
        
        partial void Ongebr_idChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("GeregistreerdeGebruiker");
            }
        }
        
        partial void Ontyp_idChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("Tickettype");
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class Tickettype :
        global::LightSwitchApplication.Tickettype.DetailsClass.IImplementation
    {
    
        global::System.Collections.IEnumerable global::LightSwitchApplication.Tickettype.DetailsClass.IImplementation.Tickets
        {
            get
            {
                return this.Tickets;
            }
        }
        
        global::System.Collections.IEnumerable global::LightSwitchApplication.Tickettype.DetailsClass.IImplementation.TickettypesPerFestivals
        {
            get
            {
                return this.TickettypesPerFestivals;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class TickettypesPerFestival :
        global::LightSwitchApplication.TickettypesPerFestival.DetailsClass.IImplementation
    {
    
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.TickettypesPerFestival.DetailsClass.IImplementation.Festival
        {
            get
            {
                return this.Festival;
            }
            set
            {
                this.Festival = (global::LightSwitchApplication.Implementation.Festival)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("Festival");
                }
            }
        }
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.TickettypesPerFestival.DetailsClass.IImplementation.Tickettype
        {
            get
            {
                return this.Tickettype;
            }
            set
            {
                this.Tickettype = (global::LightSwitchApplication.Implementation.Tickettype)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("Tickettype");
                }
            }
        }
        
        partial void Onfest_idChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("Festival");
            }
        }
        
        partial void Ontyp_idChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("Tickettype");
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
}

