

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class BandsPerFestival : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the BandsPerFestival entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BandsPerFestival()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BandsPerFestival(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.BandsPerFestival> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.BandsPerFestival.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BandsPerFestival_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BandsPerFestival_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int fest_id
        {
            get
            {
                return global::LightSwitchApplication.BandsPerFestival.DetailsClass.GetValue(this, global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.fest_id);
            }
            set
            {
                global::LightSwitchApplication.BandsPerFestival.DetailsClass.SetValue(this, global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.fest_id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void fest_id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void fest_id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void fest_id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int band_id
        {
            get
            {
                return global::LightSwitchApplication.BandsPerFestival.DetailsClass.GetValue(this, global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.band_id);
            }
            set
            {
                global::LightSwitchApplication.BandsPerFestival.DetailsClass.SetValue(this, global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.band_id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void band_id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void band_id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void band_id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime datum
        {
            get
            {
                return global::LightSwitchApplication.BandsPerFestival.DetailsClass.GetValue(this, global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.datum);
            }
            set
            {
                global::LightSwitchApplication.BandsPerFestival.DetailsClass.SetValue(this, global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.datum, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void datum_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void datum_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void datum_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.TimeSpan uur
        {
            get
            {
                return global::LightSwitchApplication.BandsPerFestival.DetailsClass.GetValue(this, global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.uur);
            }
            set
            {
                global::LightSwitchApplication.BandsPerFestival.DetailsClass.SetValue(this, global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.uur, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void uur_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void uur_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void uur_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Band Band
        {
            get
            {
                return global::LightSwitchApplication.BandsPerFestival.DetailsClass.GetValue(this, global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.Band);
            }
            set
            {
                global::LightSwitchApplication.BandsPerFestival.DetailsClass.SetValue(this, global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.Band, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Band_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Band_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Band_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Festival Festival
        {
            get
            {
                return global::LightSwitchApplication.BandsPerFestival.DetailsClass.GetValue(this, global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.Festival);
            }
            set
            {
                global::LightSwitchApplication.BandsPerFestival.DetailsClass.SetValue(this, global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.Festival, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Festival_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Festival_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Festival_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Podia Podia
        {
            get
            {
                return global::LightSwitchApplication.BandsPerFestival.DetailsClass.GetValue(this, global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.Podia);
            }
            set
            {
                global::LightSwitchApplication.BandsPerFestival.DetailsClass.SetValue(this, global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.Podia, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Podia_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Podia_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Podia_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.BandsPerFestival,
                global::LightSwitchApplication.BandsPerFestival.DetailsClass,
                global::LightSwitchApplication.BandsPerFestival.DetailsClass.IImplementation,
                global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.fest_id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass>.Entry
                __BandsPerFestivalEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass>.Entry(
                    global::LightSwitchApplication.BandsPerFestival.DetailsClass.__BandsPerFestival_CreateNew,
                    global::LightSwitchApplication.BandsPerFestival.DetailsClass.__BandsPerFestival_Created,
                    global::LightSwitchApplication.BandsPerFestival.DetailsClass.__BandsPerFestival_AllowSaveWithErrors);
            private static global::LightSwitchApplication.BandsPerFestival __BandsPerFestival_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.BandsPerFestival> es)
            {
                return new global::LightSwitchApplication.BandsPerFestival(es);
            }
            private static void __BandsPerFestival_Created(global::LightSwitchApplication.BandsPerFestival e)
            {
                e.BandsPerFestival_Created();
            }
            private static bool __BandsPerFestival_AllowSaveWithErrors(global::LightSwitchApplication.BandsPerFestival e)
            {
                bool result = false;
                e.BandsPerFestival_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, int> fest_id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.fest_id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, int> band_id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.band_id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::System.DateTime> datum
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.datum) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::System.TimeSpan> uur
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.uur) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::System.TimeSpan>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::LightSwitchApplication.Band> Band
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.Band) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::LightSwitchApplication.Band>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::LightSwitchApplication.Festival> Festival
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.Festival) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::LightSwitchApplication.Festival>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::LightSwitchApplication.Podia> Podia
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.Podia) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::LightSwitchApplication.Podia>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int fest_id { get; set; }
                new int band_id { get; set; }
                new global::System.DateTime datum { get; set; }
                new global::System.TimeSpan uur { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Band { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Festival { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Podia { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, int>.Entry
                    fest_id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, int>.Entry(
                        "fest_id",
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._fest_id_Stub,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._fest_id_ComputeIsReadOnly,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._fest_id_Validate,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._fest_id_GetImplementationValue,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._fest_id_SetImplementationValue,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._fest_id_OnValueChanged);
                private static void _fest_id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, int>.Data> c, global::LightSwitchApplication.BandsPerFestival.DetailsClass d, object sf)
                {
                    c(d, ref d._fest_id, sf);
                }
                private static bool _fest_id_ComputeIsReadOnly(global::LightSwitchApplication.BandsPerFestival e)
                {
                    bool result = false;
                    e.fest_id_IsReadOnly(ref result);
                    return result;
                }
                private static void _fest_id_Validate(global::LightSwitchApplication.BandsPerFestival e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.fest_id_Validate(r);
                }
                private static int _fest_id_GetImplementationValue(global::LightSwitchApplication.BandsPerFestival.DetailsClass d)
                {
                    return d.ImplementationEntity.fest_id;
                }
                private static void _fest_id_SetImplementationValue(global::LightSwitchApplication.BandsPerFestival.DetailsClass d, int v)
                {
                    d.ImplementationEntity.fest_id = v;
                }
                private static void _fest_id_OnValueChanged(global::LightSwitchApplication.BandsPerFestival e)
                {
                    e.fest_id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, int>.Entry
                    band_id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, int>.Entry(
                        "band_id",
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._band_id_Stub,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._band_id_ComputeIsReadOnly,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._band_id_Validate,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._band_id_GetImplementationValue,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._band_id_SetImplementationValue,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._band_id_OnValueChanged);
                private static void _band_id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, int>.Data> c, global::LightSwitchApplication.BandsPerFestival.DetailsClass d, object sf)
                {
                    c(d, ref d._band_id, sf);
                }
                private static bool _band_id_ComputeIsReadOnly(global::LightSwitchApplication.BandsPerFestival e)
                {
                    bool result = false;
                    e.band_id_IsReadOnly(ref result);
                    return result;
                }
                private static void _band_id_Validate(global::LightSwitchApplication.BandsPerFestival e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.band_id_Validate(r);
                }
                private static int _band_id_GetImplementationValue(global::LightSwitchApplication.BandsPerFestival.DetailsClass d)
                {
                    return d.ImplementationEntity.band_id;
                }
                private static void _band_id_SetImplementationValue(global::LightSwitchApplication.BandsPerFestival.DetailsClass d, int v)
                {
                    d.ImplementationEntity.band_id = v;
                }
                private static void _band_id_OnValueChanged(global::LightSwitchApplication.BandsPerFestival e)
                {
                    e.band_id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::System.DateTime>.Entry
                    datum = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::System.DateTime>.Entry(
                        "datum",
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._datum_Stub,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._datum_ComputeIsReadOnly,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._datum_Validate,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._datum_GetImplementationValue,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._datum_SetImplementationValue,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._datum_OnValueChanged);
                private static void _datum_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.BandsPerFestival.DetailsClass d, object sf)
                {
                    c(d, ref d._datum, sf);
                }
                private static bool _datum_ComputeIsReadOnly(global::LightSwitchApplication.BandsPerFestival e)
                {
                    bool result = false;
                    e.datum_IsReadOnly(ref result);
                    return result;
                }
                private static void _datum_Validate(global::LightSwitchApplication.BandsPerFestival e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.datum_Validate(r);
                }
                private static global::System.DateTime _datum_GetImplementationValue(global::LightSwitchApplication.BandsPerFestival.DetailsClass d)
                {
                    return d.ImplementationEntity.datum;
                }
                private static void _datum_SetImplementationValue(global::LightSwitchApplication.BandsPerFestival.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.datum = global::LightSwitchApplication.BandsPerFestival.DetailsClass.TruncateDate(v);
                }
                private static void _datum_OnValueChanged(global::LightSwitchApplication.BandsPerFestival e)
                {
                    e.datum_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::System.TimeSpan>.Entry
                    uur = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::System.TimeSpan>.Entry(
                        "uur",
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._uur_Stub,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._uur_ComputeIsReadOnly,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._uur_Validate,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._uur_GetImplementationValue,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._uur_SetImplementationValue,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._uur_OnValueChanged);
                private static void _uur_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::System.TimeSpan>.Data> c, global::LightSwitchApplication.BandsPerFestival.DetailsClass d, object sf)
                {
                    c(d, ref d._uur, sf);
                }
                private static bool _uur_ComputeIsReadOnly(global::LightSwitchApplication.BandsPerFestival e)
                {
                    bool result = false;
                    e.uur_IsReadOnly(ref result);
                    return result;
                }
                private static void _uur_Validate(global::LightSwitchApplication.BandsPerFestival e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.uur_Validate(r);
                }
                private static global::System.TimeSpan _uur_GetImplementationValue(global::LightSwitchApplication.BandsPerFestival.DetailsClass d)
                {
                    return d.ImplementationEntity.uur;
                }
                private static void _uur_SetImplementationValue(global::LightSwitchApplication.BandsPerFestival.DetailsClass d, global::System.TimeSpan v)
                {
                    d.ImplementationEntity.uur = v;
                }
                private static void _uur_OnValueChanged(global::LightSwitchApplication.BandsPerFestival e)
                {
                    e.uur_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::LightSwitchApplication.Band>.Entry
                    Band = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::LightSwitchApplication.Band>.Entry(
                        "Band",
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._Band_Stub,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._Band_ComputeIsReadOnly,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._Band_Validate,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._Band_GetCoreImplementationValue,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._Band_GetImplementationValue,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._Band_SetImplementationValue,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._Band_Refresh,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._Band_OnValueChanged);
                private static void _Band_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::LightSwitchApplication.Band>.Data> c, global::LightSwitchApplication.BandsPerFestival.DetailsClass d, object sf)
                {
                    c(d, ref d._Band, sf);
                }
                private static bool _Band_ComputeIsReadOnly(global::LightSwitchApplication.BandsPerFestival e)
                {
                    bool result = false;
                    e.Band_IsReadOnly(ref result);
                    return result;
                }
                private static void _Band_Validate(global::LightSwitchApplication.BandsPerFestival e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Band_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Band_GetCoreImplementationValue(global::LightSwitchApplication.BandsPerFestival.DetailsClass d)
                {
                    return d.ImplementationEntity.Band;
                }
                private static global::LightSwitchApplication.Band _Band_GetImplementationValue(global::LightSwitchApplication.BandsPerFestival.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Band, global::LightSwitchApplication.Band.DetailsClass>(global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.Band, ref d._Band);
                }
                private static void _Band_SetImplementationValue(global::LightSwitchApplication.BandsPerFestival.DetailsClass d, global::LightSwitchApplication.Band v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.Band, ref d._Band, (i, ev) => i.Band = ev, v);
                }
                private static void _Band_Refresh(global::LightSwitchApplication.BandsPerFestival.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.Band, ref d._Band);
                }
                private static void _Band_OnValueChanged(global::LightSwitchApplication.BandsPerFestival e)
                {
                    e.Band_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::LightSwitchApplication.Festival>.Entry
                    Festival = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::LightSwitchApplication.Festival>.Entry(
                        "Festival",
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._Festival_Stub,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._Festival_ComputeIsReadOnly,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._Festival_Validate,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._Festival_GetCoreImplementationValue,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._Festival_GetImplementationValue,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._Festival_SetImplementationValue,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._Festival_Refresh,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._Festival_OnValueChanged);
                private static void _Festival_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::LightSwitchApplication.Festival>.Data> c, global::LightSwitchApplication.BandsPerFestival.DetailsClass d, object sf)
                {
                    c(d, ref d._Festival, sf);
                }
                private static bool _Festival_ComputeIsReadOnly(global::LightSwitchApplication.BandsPerFestival e)
                {
                    bool result = false;
                    e.Festival_IsReadOnly(ref result);
                    return result;
                }
                private static void _Festival_Validate(global::LightSwitchApplication.BandsPerFestival e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Festival_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Festival_GetCoreImplementationValue(global::LightSwitchApplication.BandsPerFestival.DetailsClass d)
                {
                    return d.ImplementationEntity.Festival;
                }
                private static global::LightSwitchApplication.Festival _Festival_GetImplementationValue(global::LightSwitchApplication.BandsPerFestival.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Festival, global::LightSwitchApplication.Festival.DetailsClass>(global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.Festival, ref d._Festival);
                }
                private static void _Festival_SetImplementationValue(global::LightSwitchApplication.BandsPerFestival.DetailsClass d, global::LightSwitchApplication.Festival v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.Festival, ref d._Festival, (i, ev) => i.Festival = ev, v);
                }
                private static void _Festival_Refresh(global::LightSwitchApplication.BandsPerFestival.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.Festival, ref d._Festival);
                }
                private static void _Festival_OnValueChanged(global::LightSwitchApplication.BandsPerFestival e)
                {
                    e.Festival_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::LightSwitchApplication.Podia>.Entry
                    Podia = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::LightSwitchApplication.Podia>.Entry(
                        "Podia",
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._Podia_Stub,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._Podia_ComputeIsReadOnly,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._Podia_Validate,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._Podia_GetCoreImplementationValue,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._Podia_GetImplementationValue,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._Podia_SetImplementationValue,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._Podia_Refresh,
                        global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties._Podia_OnValueChanged);
                private static void _Podia_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::LightSwitchApplication.Podia>.Data> c, global::LightSwitchApplication.BandsPerFestival.DetailsClass d, object sf)
                {
                    c(d, ref d._Podia, sf);
                }
                private static bool _Podia_ComputeIsReadOnly(global::LightSwitchApplication.BandsPerFestival e)
                {
                    bool result = false;
                    e.Podia_IsReadOnly(ref result);
                    return result;
                }
                private static void _Podia_Validate(global::LightSwitchApplication.BandsPerFestival e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Podia_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Podia_GetCoreImplementationValue(global::LightSwitchApplication.BandsPerFestival.DetailsClass d)
                {
                    return d.ImplementationEntity.Podia;
                }
                private static global::LightSwitchApplication.Podia _Podia_GetImplementationValue(global::LightSwitchApplication.BandsPerFestival.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Podia, global::LightSwitchApplication.Podia.DetailsClass>(global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.Podia, ref d._Podia);
                }
                private static void _Podia_SetImplementationValue(global::LightSwitchApplication.BandsPerFestival.DetailsClass d, global::LightSwitchApplication.Podia v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.Podia, ref d._Podia, (i, ev) => i.Podia = ev, v);
                }
                private static void _Podia_Refresh(global::LightSwitchApplication.BandsPerFestival.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.BandsPerFestival.DetailsClass.PropertySetProperties.Podia, ref d._Podia);
                }
                private static void _Podia_OnValueChanged(global::LightSwitchApplication.BandsPerFestival e)
                {
                    e.Podia_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, int>.Data _fest_id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, int>.Data _band_id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::System.DateTime>.Data _datum;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::System.TimeSpan>.Data _uur;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::LightSwitchApplication.Band>.Data _Band;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::LightSwitchApplication.Festival>.Data _Festival;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.BandsPerFestival, global::LightSwitchApplication.BandsPerFestival.DetailsClass, global::LightSwitchApplication.Podia>.Data _Podia;
            
        }
    
        #endregion
    }
    
    #endregion
}
